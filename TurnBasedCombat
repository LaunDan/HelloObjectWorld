package turnCombat;

/**
 * @author Laun
 * launadaniel2@gmail.com
 */
public class TurnCombat {

    public static void main(String[] args) {
        Cube playerOne = new Cube();
        Cube playerTwo = new Cube();
        int draw = 0;
        // Repeat one hundred times match
        for (int i = 0; i < 100; i++) {
            // Throwing by dices till one of player die
            while (playerOne.life > 0 && playerTwo.life > 0) {
                // First attack
                int playerOneFirstThrow = playerOne.throwed();
                int playerTwoFirstThrow = playerTwo.throwed();
                // Second attack
                int playerOneSecondThrow = playerOne.throwed();
                int playerTwoSecondThrow = playerTwo.throwed();

                System.out.printf("Player one on turn\nPlayer one throwed: %d\nPlayer two throwed: %d\n", playerOneFirstThrow, playerTwoFirstThrow);
                // if player one throwed bigger number, player two lost life points about difference of thrown numbers
                if (playerOneFirstThrow > playerTwoFirstThrow) {
                    System.out.printf("Player one attacked by %d points!\n", (playerOneFirstThrow - playerTwoFirstThrow));
                    playerTwo.life -= (playerOneFirstThrow - playerTwoFirstThrow);
                }
                // if player one throwed smaller or similar number, attack will miss player two
                if (playerOneFirstThrow <= playerTwoFirstThrow) {
                    System.out.println("Player one miss");
                }
                System.out.printf("Player two on turn\nPlayer one throwed: %d\nPlayer two throwed: %d\n", playerOneSecondThrow, playerTwoSecondThrow);
                // if player two throwed bigger number, player one lost life points about difference of thrown numbers
                if (playerTwoSecondThrow > playerOneSecondThrow) {
                    System.out.printf("Player two attacked by %d points!\n", (playerTwoSecondThrow - playerOneSecondThrow));
                    playerOne.life -= (playerTwoSecondThrow - playerOneSecondThrow);
                }
                // if player two throwed smaller or similar number, attack will miss player one
                if (playerTwoSecondThrow <= playerOneSecondThrow) {
                    System.out.println("Player two miss");
                }
                // if none of player die prints their life points
                if (playerOne.life > 0 && playerTwo.life > 0) {
                    System.out.printf("Player one have %d life points.\nPlayer two have %d life points.\n\n", playerOne.life, playerTwo.life);
                }
                // if player one win 
                if (playerTwo.life <= 0 && playerOne.life > 0) {
                    System.out.printf("Player one won with %d life points!!\n\n", playerOne.life);
                    playerOne.matchWon += 1;
                }
                // if player two win 
                if (playerOne.life <= 0 && playerTwo.life > 0) {
                    System.out.printf("Player two won with %d life points!!\n\n", playerTwo.life);
                    playerTwo.matchWon += 1;
                }
                if (playerOne.life <= 0 && playerTwo.life <= 0) {
                    draw += 1;
                }

            }
            playerOne.life = 100;
            playerTwo.life = 100;
        }
        System.out.printf("Player one won %d times.\nPlayer two won %d times.\nMatch endup with draw %d times.", playerOne.matchWon, playerTwo.matchWon, draw);
    }
}
